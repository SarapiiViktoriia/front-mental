function unimplementedError(methodName, classname) {
  return new Error(`${methodName} is a required method of ${classname}, but was not implemented.`);
}
class EnzymeAdapter {
  constructor() {
    this.options = {};
  }
  createRenderer(options) {
    throw unimplementedError('createRenderer', 'EnzymeAdapter');
  }
  nodeToElement(node) {
    throw unimplementedError('nodeToElement', 'EnzymeAdapter');
  }
  isValidElement(element) {
    throw unimplementedError('isValidElement', 'EnzymeAdapter');
  }
  createElement(type, props, ...children) {
    throw unimplementedError('createElement', 'EnzymeAdapter');
  }
  invokeSetStateCallback(instance, callback) {
    callback.call(instance);
  }
}
EnzymeAdapter.MODES = {
  STRING: 'string',
  MOUNT: 'mount',
  SHALLOW: 'shallow',
};
module.exports = EnzymeAdapter;
