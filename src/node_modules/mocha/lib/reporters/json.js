'use strict';
var Base = require('./base');
exports = module.exports = JSONReporter;
function JSONReporter(runner) {
  Base.call(this, runner);
  var self = this;
  var tests = [];
  var pending = [];
  var failures = [];
  var passes = [];
  runner.on('test end', function(test) {
    tests.push(test);
  });
  runner.on('pass', function(test) {
    passes.push(test);
  });
  runner.on('fail', function(test) {
    failures.push(test);
  });
  runner.on('pending', function(test) {
    pending.push(test);
  });
  runner.once('end', function() {
    var obj = {
      stats: self.stats,
      tests: tests.map(clean),
      pending: pending.map(clean),
      failures: failures.map(clean),
      passes: passes.map(clean)
    };
    runner.testResults = obj;
    process.stdout.write(JSON.stringify(obj, null, 2));
  });
}
function clean(test) {
  var err = test.err || {};
  if (err instanceof Error) {
    err = errorJSON(err);
  }
  return {
    title: test.title,
    fullTitle: test.fullTitle(),
    duration: test.duration,
    currentRetry: test.currentRetry(),
    err: cleanCycles(err)
  };
}
function cleanCycles(obj) {
  var cache = [];
  return JSON.parse(
    JSON.stringify(obj, function(key, value) {
      if (typeof value === 'object' && value !== null) {
        if (cache.indexOf(value) !== -1) {
          return '' + value;
        }
        cache.push(value);
      }
      return value;
    })
  );
}
function errorJSON(err) {
  var res = {};
  Object.getOwnPropertyNames(err).forEach(function(key) {
    res[key] = err[key];
  }, err);
  return res;
}
